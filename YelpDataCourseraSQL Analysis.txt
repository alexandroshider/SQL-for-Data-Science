Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

SELECT * FROM table;
	
i. Attribute table =   10000
ii. Business table =   10000
iii. Category table =  10000
iv. Checkin table =    10000
v. elite_years table = 10000	
vi. friend table = 	   10000
vii. hours table =	   10000
viii. photo table =    10000
ix. review table =     10000
x. tip table =         10000
xi. user table =       10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

SELECT count(DISTINCT(primary_or_foreign_key)) FROM table;

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537 distinct records for the foreign key user_id,  3979 records for business_id foreign key
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	SELECT COUNT(*) FROM User
		WHERE id IS NULL OR
            name is NULL OR
            review_count IS NULL OR
            yelping_since IS NULL OR
            useful IS NULL OR 
            funny IS NULL OR 
            cool IS NULL OR 
            fans IS NULL OR 
            average_stars IS NULL OR 
            compliment_hot IS NULL OR 
            compliment_more IS NULL OR 
            compliment_profile IS NULL OR 
            compliment_cute IS NULL OR 
            compliment_list IS NULL OR 
            compliment_note IS NULL OR 
            compliment_plain IS NULL OR 
            compliment_cool IS NULL OR 
            compliment_funny IS NULL OR 
            compliment_writer IS NULL OR 
            compliment_photos IS NULL;
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	CODE: SELECT MIN(Review_count)
		  , MAX(Review_count) 
		  , AVG(Review_count)
		  FROM User;

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	SELECT City
	, COUNT(review_count) AS reviews_in_city
	FROM business
	GROUP BY City
	ORDER BY reviews_in_city DESC;
	
	Copy and Paste the Result Below:
+-----------------+-----------------+
| city            | reviews_in_city |
+-----------------+-----------------+
| Las Vegas       |            1561 |
| Phoenix         |            1001 |
| Toronto         |             985 |
| Scottsdale      |             497 |
| Charlotte       |             468 |
| Pittsburgh      |             353 |
| Montréal        |             337 |
| Mesa            |             304 |
| Henderson       |             274 |
| Tempe           |             261 |
| Edinburgh       |             239 |
| Chandler        |             232 |
| Cleveland       |             189 |
| Gilbert         |             188 |
| Glendale        |             188 |
| Madison         |             176 |
| Mississauga     |             150 |
| Stuttgart       |             141 |
| Peoria          |             105 |
| Markham         |              80 |
| Champaign       |              71 |
| North Las Vegas |              70 |
| North York      |              64 |
| Surprise        |              60 |
| Richmond Hill   |              54 |
+-----------------+-----------------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT Stars
, COUNT(review_count) AS reviews
FROM business
WHERE city="Avon"
GROUP BY Stars;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+---------+
| stars | reviews |
+-------+---------+
|   1.5 |       1 |
|   2.5 |       2 |
|   3.5 |       3 |
|   4.0 |       2 |
|   4.5 |       1 |
|   5.0 |       1 |
+-------+---------+


ii. Beachwood

SQL code used to arrive at answer:
SELECT Stars
, COUNT(review_count) AS reviews
FROM business
WHERE city="Beachwood"
GROUP BY Stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+---------+
| stars | reviews |
+-------+---------+
|   2.0 |       1 |
|   2.5 |       1 |
|   3.0 |       2 |
|   3.5 |       2 |
|   4.0 |       1 |
|   4.5 |       2 |
|   5.0 |       5 |
+-------+---------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	SELECT Name
	, SUM(review_count) AS reviews
	FROM User
	GROUP BY Name
	ORDER BY reviews DESC
	LIMIT 3;
		
	Copy and Paste the Result Below:
	+--------+---------+
	| name   | reviews |
	+--------+---------+
	| Nicole |    2397 |
	| Sara   |    2253 |
	| Gerald |    2034 |
	+--------+---------+	


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	No, the result of the query shows that there is no relation between reviews and fans
	The top three in reviews is not the top 3 in fans
	
	CODE:
	SELECT Name

+-----------+---------+------------+
| name      | Reviews | total_fans |
+-----------+---------+------------+
| Nicole    |    2397 |        200 |
| Sara      |    2253 |         72 |
| Gerald    |    2034 |        256 |
| Lisa      |    2021 |        207 |
| Mark      |    1945 |        156 |
| Jennifer  |    1862 |         86 |
| Jen       |    1744 |        148 |
| Michelle  |    1737 |        133 |
| Melissa   |    1678 |        104 |
| William   |    1639 |        142 |
| Karen     |    1625 |        123 |
| Justin    |    1572 |         78 |
| Rachel    |    1519 |         79 |
| Daniel    |    1441 |         75 |
| Sarah     |    1436 |        100 |
| Chris     |    1419 |         52 |
| Jeff      |    1410 |         45 |
| Mike      |    1400 |        119 |
| Yuri      |    1341 |         76 |
| Dan       |    1333 |         44 |
| Christine |    1309 |        187 |
| John      |    1264 |         46 |
| Jessica   |    1248 |        116 |
| .Hon      |    1246 |        101 |
| Matt      |    1239 |         62 |
+-----------+---------+------------+	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	There are more words with the word hate
	
	SQL code used to arrive at answer:
	SELECT COUNT(*)
	FROM review
	WHERE text LIKE "%love%"
	UNION
	SELECT COUNT(*)
	FROM review
	WHERE text LIKE "%hate%"

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	SELECT name
	, sum(fans) AS total_fans
	FROM user
	GROUP BY name
	ORDER BY total_fans DESC
	LIMIT 10;
	
	Copy and Paste the Result Below:
+-----------+------------+
| name      | total_fans |
+-----------+------------+
| Amy       |        519 |
| Mimi      |        498 |
| Harald    |        311 |
| Gerald    |        256 |
| Lisa      |        207 |
| Nicole    |        200 |
| Christine |        187 |
| Mark      |        156 |
| Jen       |        148 |
| Linda     |        148 |
+-----------+------------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. 
Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
Yes, they do

ii. Do the two groups you chose to analyze have a different number of reviews?
Yes, there are different number of reviews in each group
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
No, all of them have different postal code and neighborhood.

SQL code used for analysis:
SELECT name
, stars
, city
, category
, is_open
, neighborhood
, postal_code
--, hours
, sum(review_count)
, CASE
	WHEN stars BETWEEN 2 AND 3 THEN '2-3 stars'
     WHEN stars BETWEEN 4 AND 5 THEN '4-5 stars'
     END AS rating
FROM Business b 
JOIN category c ON c.Business_id=id
JOIN hours h ON h.Business_id=id
WHERE city="Toronto" AND category="Food"
GROUP BY name, stars, city, category, is_open--, hours
ORDER BY stars ASC;
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
    20% of business are closed while 80% are open     
         
ii. Difference 2:
    The average of stars in opened business is higher than in closed ones.    
	The same happens with 	
         
         
SQL code used for analysis:
SELECT is_open
, AVG(STARS)
, COUNT(is_open )
, SUM(review_count)
, AVG(review_count)
FROM Business 
WHERE city="Toronto" 
GROUP BY is_open;

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp 
dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, 
clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, 
predicting the number of fans a user will have, and so on. These are just a few examples to get you started, 
so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, 
to all of the following:
	
i. Indicate the type of analysis you chose to do:
    I chose to analize the relation between the how many stars and how many reviews have a business
	and if is_open matters or not in this relation
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
    I need to clasify in two groups for is_open, then count how many reviews have each group of stars from 1.0 to 5.0
	Then I count how many business are in each group of stars
                  
iii. Output of your finished dataset: 
	+---------+-------+--------------+-------------------+
| is_open | stars | count(stars) | sum(review_count) |
+---------+-------+--------------+-------------------+
|       0 |   1.0 |           14 |                68 |
|       0 |   1.5 |           24 |               219 |
|       0 |   2.0 |           94 |              1193 |
|       0 |   2.5 |          168 |              3352 |
|       0 |   3.0 |          272 |              5898 |
|       0 |   3.5 |          295 |              9114 |
|       0 |   4.0 |          326 |              9699 |
|       0 |   4.5 |          189 |              4881 |
|       0 |   5.0 |          138 |               837 |
|       1 |   1.0 |          142 |               893 |
|       1 |   1.5 |          182 |              2443 |
|       1 |   2.0 |          472 |              6627 |
|       1 |   2.5 |          722 |             13456 |
|       1 |   3.0 |         1124 |             30397 |
|       1 |   3.5 |         1483 |             62211 |
|       1 |   4.0 |         1679 |             87345 |
|       1 |   4.5 |         1249 |             49057 |
|       1 |   5.0 |         1427 |             16871 |
+---------+-------+--------------+-------------------+
	There is a proportion between the quantity of of business with certain group of stars and the quanty of 
	reviews on that group. This proportion is similar in opened and closed business.
         
iv. Provide the SQL code you used to create your final dataset:
SELECT is_open,stars,count(stars),sum(review_count)
FROM Business
GROUP BY is_open, stars